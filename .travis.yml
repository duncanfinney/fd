language: rust
cache: cargo
matrix:
  # allow_failures:
  #   - rust: nightly
  include:
    # Stable channel.
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-musl
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-gnu
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-musl
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin
    - os: linux
      rust: stable
      env:
        - TARGET=arm-unknown-linux-gnueabihf
        - CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc-4.8
    - os: linux
      rust: stable
      env:
        - TARGET=arm-unknown-linux-musleabihf
        - CARGO_TARGET_ARM_UNKNOWN_LINUX_MUSLEABIHF_LINKER=arm-linux-gnueabihf-gcc-4.8

    # Beta channel.
    - os: linux
      rust: beta
      env: TARGET=x86_64-unknown-linux-gnu
    # Disabled to reduce total CI time
    # - os: linux
    #   rust: beta
    #   env: TARGET=x86_64-unknown-linux-musl
    # - os: linux
    #   rust: beta
    #   env: TARGET=i686-unknown-linux-gnu
    # - os: linux
    #   rust: beta
    #   env: TARGET=i686-unknown-linux-musl
    # - os: osx
    #   rust: beta
    #   env: TARGET=x86_64-apple-darwin

    # Nightly channel.
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu
    # Disabled to reduce total CI time
    # - os: linux
    #   rust: nightly
    #   env: TARGET=x86_64-unknown-linux-musl
    # - os: linux
    #   rust: nightly
    #   env: TARGET=i686-unknown-linux-gnu
    # - os: linux
    #   rust: nightly
    #   env: TARGET=i686-unknown-linux-musl
    # - os: osx
    #   rust: nightly
    #   env: TARGET=x86_64-apple-darwin

    # Minimum Rust supported channel.
    - os: linux
      rust: 1.29.0
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: 1.29.0
      env: TARGET=x86_64-unknown-linux-musl
    - os: linux
      rust: 1.29.0
      env: TARGET=i686-unknown-linux-gnu
    - os: linux
      rust: 1.29.0
      env: TARGET=i686-unknown-linux-musl
    - os: osx
      rust: 1.29.0
      env: TARGET=x86_64-apple-darwin

    # Code formatting check
    - os: linux
      rust: nightly
      # skip the global install step
      install:
        - cargo install --debug --force rustfmt-nightly
      script: cargo fmt -- --check

sudo: required

before_install:
  - ci/before_install.bash

env:
  global:
    # Default target on travis-ci.
    # Used as conditional check in the install stage
    - HOST=x86_64-unknown-linux-gnu
    # Used on the deployment script
    - PROJECT_NAME=fd

install:
  # prevent target re-add error from rustup
  - if [[ $TRAVIS_OS_NAME = linux && $HOST != $TARGET ]]; then rustup target add $TARGET; fi

script:
  - ci/script.bash

before_deploy:
  - bash ci/before_deploy.bash

deploy:
  provider: releases
  # NOTE updating the `api_key.secure`
  # - go to: https://github.com/settings/tokens/new
  # - generate new token using `public_repo` scope
  # - encrypt it using: `travis encrypt API_KEY_HERE`
  # - paste the output below
  api_key:
    secure: "LI4NVL9GlJQjx1kLGVCKQIKCQ8QLjSksx6n+vDm7A8mj8o7eFD4zwJ7FhHyfgaj6S+sZL8OrvgN1niErT0SbyqHTC2TjKBxY65r50nFdUpqnnRiUiBQXfMx28KgS8eEn0IbK65dBhw7GYkNBfUoVVUEPRiEiclTcZzyM1x9Z0ezOulCFMIYJbQNZX+wR1BV1fhqk6B03G4GrS4R3Pd9rkWknZCzMcQxMlMG9qKMy0Yj3fNJkcX4xX0M9IYA+cO1t/BWf2b6SgJSWnhDDq95HCd7u5DNy2vjQqoTvC89yC9JC/AkNedM0X1iiV4/TELGyKbQdSG90RCHMSZc28KS4N4z/TKW+9A3A6uP5dlHceKMjPgYUEDMVADBl2UmE72cms9hcKsyyPMR4BMoL1n8on3uitcpR+Ecb7IWrGAO0G0MLcZ6kX4Pmpb2essVZPjZwdjw3M9TpYReTSPLzoSgDo9N+mzxPvHDdRUkl76L7vMowLlVWK7eL677BGGK9pxEE+HsrGjo0KXEEXBvD0gspHlKHQRSCcUrrRNI001OuJDRoRt/zjLFMHBdwjoWmc+1kGmPvJHRjql5EOhLxJLuVk5Hf51KxMeHyjRwxdzDGFIg1NAE4djAx/30oxnZ5EWNa7P/APwyUHwijyO5VcsePb17krVX7PQAF/LqB6IuIJAo="
  # for uploading multiple files
  file_glob: true
  # NOTE explanation on each env variable
  # - PROJECT_NAME: name of the project, set on the `env.global` above
  # - TRAVIS_TAG: tag name that the build is being deployed for, usually the version number
  # - TARGET: target triple of the build
  file:
    - $PROJECT_NAME-$TRAVIS_TAG-$TARGET.*
    - $PROJECT_NAME*.deb
  # don't delete artifacts from previous stage
  skip_cleanup: true
  on:
    # deploy only if we push a tag
    tags: true
    # deploy only on stable channel that has TARGET env variable sets
    condition: $TRAVIS_RUST_VERSION = stable && $TARGET != ""

notifications:
  email:
    on_success: never
